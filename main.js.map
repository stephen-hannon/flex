{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/utils.js","webpack:///./src/index.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","MS_PER_DAY","softSemesterLimit","addCurrency","x","y","Math","round","getSemesterStart","year","season","dayjs","Date","day","getSemesterEnd","findSemester","now","nowDay","endFall","endSpring","add","isBefore","concat","start","valueOf","end","formatCurrency","num","abs","toFixed","formatCurrencyOutput","isNaN","formatDate","date","format","parseDataRow","row","_row$split2","_slicedToArray","split","category","dateString","amount","undefined","dateStringFormatted","replace","parse","spentMatch","match","minusMatch","amountChange","index","library","faGithub","faArrowLeft","faArrowRight","faRedo","faTimes","faBars","faUser","faCommentAlt","dom","watch","Flex","demoText","sampleData","Vue","$utils","utils","vm","el","currentIdealBalanceIndex","debugNow","manualDates","quickBalance","parsedRawData","processedView","rawData","rawDataComplete","rawDataError","remainingBalance","showMessages","startBalance","tabOption","tabOptions","macos","mobile","windows","computed","inSemester","this","semester","inSemesterCurrent","getNow","semesterCurrent","rates","past","future","remainingBalanceIdeal","daysPast","min","weeksPast","daysFuture","max","weeksFuture","total","spentBalance","perDay","perWeek","getIdealBalanceAtDate","remainingBalanceIdealCurrent","remainingBalanceRelative","indexOf","parseRawData","balanceData","makeChart","oldStartBalance","mounted","userAgent","navigator","test","nowDate","location","hash","_nowDate$map2","src_slicedToArray","map","e","Number","month","getTime","console","log","methods","adjustIncompleteData","adjustParsedRawData","adjustmentAmount","original","changeSemesterDate","startOrEnd","deltaDay","validateOnly","deltaMs","ctrlOrCmd","semesters","reduce","prevSemester","curSemester","arguments","msOverall","getIdealBalanceData","idealBalanceData","nowNearestMinute","floor","marker","enabled","series","color","lineWidth","enableMouseTracking","step","tooltip","pointFormatter","dashStyle","_this","Highcharts","chart","type","events","load","point","refresh","title","text","xAxis","crosshair","snap","labels","yAxis","plotOptions","line","dateTimeLabelFormats","minute","valueDecimals","valuePrefix","time","useUTC","useDemo","previousChange","parseResult","firstAmount","unshift"],"mappings":"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","file":"main.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([9,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import dayjs from 'dayjs';\n\n/**\n * @typedef {Object} semester\n * @property {number} year - year plus 0.1 if spring, 0.2 if fall\n * @property {string} name - human-readable name: `[Spring|Fall] <year>`\n * @property {number} start - start date, as a unix timestamp in milliseconds\n * @property {number} end - end date, as a unix timestamp in milliseconds\n */\n\n/**\n * @typedef {Object} parsedRow\n * @property {number} date - a unix timestamp in milliseconds\n * @property {number} amountChange\n */\n\nexport const MS_PER_DAY = 1000 * 60 * 60 * 24;\n\nexport const softSemesterLimit = MS_PER_DAY * 7; // 1 week\n\n/**\n * Adds two numbers that avoids floating-point errors like `.1 + .2 !== .3`\n * @param {number} x\n * @param {number} y\n * @returns {number} `x + y`, with two digits of precision\n */\nexport const addCurrency = (x, y) => Math.round(x * 100 + y * 100) / 100;\n\n/**\n * For spring: Sunday, January 9-15\n * For fall: Sunday, August 19-25\n * @param {number} year\n * @param {'Spring' | 'Fall'} season\n * @returns {dayjs.Dayjs} the start date of the given semester\n */\nexport const getSemesterStart = (year, season) =>\n\tdayjs(\n\t\tseason === 'Spring' ? new Date(year, 0, 15) : new Date(year, 7, 25)\n\t).day(0);\n\n/**\n * For spring: Saturday, May 7-13\n * For fall: Saturday, December 15-21\n * @param {number} year\n * @param {'Spring' | 'Fall'} season\n * @returns {dayjs.Dayjs} the end date of the given semester\n */\nexport const getSemesterEnd = (year, season) =>\n\tdayjs(\n\t\tseason === 'Spring' ? new Date(year, 4, 7) : new Date(year, 11, 15)\n\t).day(6);\n\n/**\n * @param {number | Date | string} now\n * @returns {semester}\n */\nexport const findSemester = (now) => {\n\tconst nowDay = dayjs(now);\n\tlet year = nowDay.get('year'),\n\t\tseason;\n\n\tconst endFall = getSemesterEnd(year, 'Fall');\n\tconst endSpring = getSemesterEnd(year, 'Spring');\n\n\tif (endFall.add(softSemesterLimit, 'ms').isBefore(nowDay)) {\n\t\tyear++;\n\t\tseason = 'Spring';\n\t} else if (endSpring.add(softSemesterLimit, 'ms').isBefore(nowDay)) {\n\t\tseason = 'Fall';\n\t} else {\n\t\tseason = 'Spring';\n\t}\n\n\treturn {\n\t\tyear: year + (season === 'Spring' ? 0.1 : 0.2),\n\t\tname: `${season} ${year}`,\n\t\tstart: getSemesterStart(year, season).valueOf(),\n\t\tend: getSemesterEnd(year, season).valueOf(),\n\t};\n};\n\n/**\n * @param {number} num - the currency amount, as a float\n * @returns {string} the amount, formatted with a dollar sign and rounded to two decimal places\n */\nexport const formatCurrency = num => `${ num < 0 ? '\\u2212' : '' }$${ Math.abs(num).toFixed(2) }`;\n\n/** temporary */\nexport const formatCurrencyOutput = num => (typeof num === 'number' && !isNaN(num)) ? formatCurrency(num) : '$\\u2014';\n\nexport const formatDate = date => dayjs(date).format('ddd, MMMM D, YYYY');\n\n/**\n * Parses a row from the Flex Point usage table\n * @param {string} row - the row, each cell separated by tabs\n * @returns {parsedRow} the date and the amount changed, or null if an invalid row\n */\nexport const parseDataRow = row => {\n\tconst [category, dateString, , amount] = row.split('\\t');\n\n\tif (amount === undefined || category !== 'Flex Points') return null;\n\n\t// TODO: use a library to parse the date dependably\n\tconst dateStringFormatted = dateString\n\t\t.replace(/\\s/g, ' ')\n\t\t.replace(/\\B[AP]M/, ' $&'); // Add space before AM or PM so Date.parse understands it.\n\tconst date = Date.parse(dateStringFormatted);\n\tconst spentMatch = amount.match(/[\\d.]+/);\n\n\tif (isNaN(date) || !spentMatch) return null;\n\n\tconst minusMatch = amount.match(/[-\\u2013]/); // look for a minus sign (hyphen or en-dash)\n\tlet amountChange = +spentMatch[0];\n\n\t// account for positive/negative changes\n\tif (minusMatch && minusMatch.index < spentMatch.index) {\n\t\tamountChange = -amountChange;\n\t}\n\n\treturn  {\n\t\tdate,\n\t\tamountChange,\n\t};\n};\n","'use strict';\n\nimport Vue from 'vue';\nimport Highcharts from 'highcharts';\n\nimport { library, dom } from '@fortawesome/fontawesome-svg-core';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\nimport { faArrowLeft, faArrowRight, faRedo, faTimes, faBars, faUser, faCommentAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport * as utils from './utils';\nimport sampleData from './sample-data.json';\n\nlibrary.add(faGithub, faArrowLeft, faArrowRight, faRedo, faTimes, faBars, faUser, faCommentAlt);\ndom.watch();\n\nconst Flex = {};\n\nFlex.demoText = sampleData.data;\n\nVue.prototype.$utils = utils;\n\nconst vm = new Vue({\n\tel: '#flexible',\n\n\tdata: {\n\t\tcurrentIdealBalanceIndex: null,\n\t\tdebugNow: null,\n\t\tmanualDates: {\n\t\t\tstart: null,\n\t\t\tend: null,\n\t\t},\n\t\tquickBalance: null,\n\t\tnow: Date.now(),\n\t\tparsedRawData: null,\n\t\tprocessedView: false, // if we're displaying a semester other than the current one\n\t\trawData: '',\n\t\trawDataComplete: true,\n\t\trawDataError: false,\n\t\tremainingBalance: null,\n\t\tshowMessages: {\n\t\t\trawDataComplete: false,\n\t\t},\n\t\tstartBalance: 500,\n\t\ttabOption: 'windows', // currently selected tab\n\t\ttabOptions: {\n\t\t\tmacos: 'macOS',\n\t\t\tmobile: 'Mobile',\n\t\t\twindows: 'Windows',\n\t\t},\n\t},\n\n\tcomputed: {\n\t\tinSemester: function () {\n\t\t\treturn (this.now > this.semester.start - this.$utils.softSemesterLimit);\n\t\t},\n\t\tinSemesterCurrent: function () {\n\t\t\treturn (this.getNow() > this.semesterCurrent.start - this.$utils.softSemesterLimit);\n\t\t},\n\t\trates: function () {\n\t\t\tif (!this.semester) {\n\t\t\t\treturn {\n\t\t\t\t\tpast: null,\n\t\t\t\t\tfuture: null,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tconst DAYS_PER_WEEK = 7;\n\t\t\tconst remainingBalance = this.remainingBalance || this.remainingBalanceIdeal;\n\n\t\t\tconst msPast = Math.min(this.now, this.semester.end) - this.semester.start;\n\t\t\tconst daysPast = msPast / this.$utils.MS_PER_DAY;\n\t\t\tconst weeksPast = daysPast / DAYS_PER_WEEK;\n\n\t\t\tconst msFuture = this.semester.end - Math.max(this.now, this.semester.start);\n\t\t\tconst daysFuture = msFuture / this.$utils.MS_PER_DAY;\n\t\t\tconst weeksFuture = daysFuture / DAYS_PER_WEEK;\n\n\t\t\treturn {\n\t\t\t\tpast: {\n\t\t\t\t\ttotal: this.spentBalance,\n\t\t\t\t\tperDay: this.spentBalance / daysPast || 0,\n\t\t\t\t\tperWeek: this.spentBalance / weeksPast || 0,\n\t\t\t\t},\n\t\t\t\tfuture: {\n\t\t\t\t\ttotal: remainingBalance,\n\t\t\t\t\tperDay: remainingBalance / daysFuture || 0,\n\t\t\t\t\tperWeek: remainingBalance / weeksFuture || 0,\n\t\t\t\t},\n\t\t\t};\n\t\t},\n\t\tremainingBalanceIdeal: function () {\n\t\t\treturn this.getIdealBalanceAtDate(this.now);\n\t\t},\n\t\tremainingBalanceIdealCurrent: function () {\n\t\t\treturn this.getIdealBalanceAtDate(this.getNow(), this.semesterCurrent);\n\t\t},\n\t\tremainingBalanceRelative: function () {\n\t\t\treturn this.remainingBalance - this.remainingBalanceIdeal || 0;\n\t\t},\n\t\tsemester: function () {\n\t\t\tconst semester = this.$utils.findSemester(this.now);\n\t\t\tif (this.manualDates.start) {\n\t\t\t\tsemester.start += this.manualDates.start;\n\t\t\t}\n\t\t\tif (this.manualDates.end) {\n\t\t\t\tsemester.end += this.manualDates.end;\n\t\t\t}\n\t\t\treturn semester;\n\t\t},\n\t\tsemesterCurrent: function () {\n\t\t\tconst semester = this.$utils.findSemester(this.getNow());\n\t\t\t// this.semester may have customized dates, so use that.\n\t\t\t// TODO: Customized dates could make findSemester not line up with this.semester.\n\t\t\treturn (semester.year === this.semester.year) ? this.semester : semester;\n\t\t},\n\t\tspentBalance: function () {\n\t\t\treturn this.$utils.addCurrency(this.startBalance, -(this.remainingBalance || this.remainingBalanceIdeal));\n\t\t},\n\t},\n\n\n\twatch: {\n\t\tnow: function () {\n\t\t\tthis.manualDates = {\n\t\t\t\tstart: null,\n\t\t\t\tend: null,\n\t\t\t};\n\t\t},\n\n\t\trawData: function (rawData) {\n\t\t\tif (rawData) {\n\t\t\t\t// quick sanity check\n\t\t\t\tif (rawData.indexOf('Flex Points') === -1) {\n\t\t\t\t\tthis.rawDataError = true;\n\t\t\t\t} else {\n\t\t\t\t\tFlex.parseRawData(rawData);\n\t\t\t\t}\n\n\t\t\t\tthis.rawData = null;\n\t\t\t}\n\t\t},\n\n\t\tquickBalance: function () {\n\t\t\tif (this.quickBalance !== null) {\n\t\t\t\tthis.rawDataComplete = true;\n\t\t\t\tthis.now = this.getNow();\n\n\t\t\t\tthis.remainingBalance = this.quickBalance;\n\t\t\t\tconst balanceData = [\n\t\t\t\t\t[this.semester.start, this.startBalance],\n\t\t\t\t\t[this.now, this.remainingBalance],\n\t\t\t\t];\n\n\t\t\t\tthis.processedView = true;\n\t\t\t\tthis.makeChart(balanceData);\n\t\t\t\tthis.quickBalance = null;\n\t\t\t}\n\t\t},\n\n\t\tstartBalance: function (startBalance, oldStartBalance) {\n\t\t\tif (startBalance !== oldStartBalance) {\n\t\t\t\tthis.makeChart();\n\t\t\t}\n\t\t},\n\t},\n\n\tmounted: function () {\n\t\t// Basic user agent sniffing to determine which tab to show initially.\n\t\t// It's not perfect, but it's just a convenience.\n\t\tconst userAgent = window.navigator.userAgent;\n\t\tif (/iPhone|iPad|iPod|Android/.test(userAgent)) {\n\t\t\tthis.tabOption = 'mobile';\n\t\t} else if (userAgent.indexOf('Mac') !== -1) {\n\t\t\tthis.tabOption = 'macos';\n\t\t}\n\t\t// else stays as 'windows'\n\n\t\t// Allow overriding the current date by URL hash. No public interface\n\t\t// since it could break things.\n\t\tconst nowDate = window.location.hash.match(/^#now=(\\d{4})-(\\d{2})-(\\d{2})$/);\n\t\tif (nowDate !== null) {\n\t\t\tconst [, year, month, day] = nowDate.map(e => Number(e));\n\t\t\tconst now = new Date(year, month - 1, day);\n\t\t\tthis.debugNow = now.getTime();\n\t\t\tthis.now = this.debugNow;\n\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.log('Setting debug date to', now);\n\t\t}\n\n\t\tthis.makeChart();\n\t},\n\n\tmethods: {\n\t\t/**\n\t\t * Adjusts `parsedRawData` so its last balance value is `remainingBalance`\n\t\t * @param {number} remainingBalance\n\t\t * @returns {void}\n\t\t */\n\t\tadjustIncompleteData: function (remainingBalance) {\n\t\t\tremainingBalance = Number(remainingBalance);\n\n\t\t\tif (!this.rawDataComplete && !isNaN(remainingBalance)) {\n\t\t\t\tthis.showMessages.rawDataComplete = false;\n\t\t\t\tthis.remainingBalance = remainingBalance;\n\t\t\t\tthis.adjustParsedRawData(remainingBalance - this.parsedRawData[this.parsedRawData.length - 1][1]);\n\t\t\t\tthis.makeChart(this.parsedRawData);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Adjusts `parsedRawData` by adding `adjustmentAmount` to each balance\n\t\t * @param {number} adjustmentAmount\n\t\t * @returns {void}\n\t\t */\n\t\tadjustParsedRawData: function (adjustmentAmount) {\n\t\t\tif (!adjustmentAmount) return;\n\n\t\t\tthis.parsedRawData = this.parsedRawData.map(function (original) {\n\t\t\t\toriginal[1] = this.$utils.addCurrency(original[1], adjustmentAmount);\n\t\t\t\treturn original;\n\t\t\t}, this);\n\t\t},\n\n\t\t/**\n\t\t * Modifies the semester start or end date by adding or subtracting days\n\t\t * @param {'start'|'end'} startOrEnd - whether the start or end date should be changed\n\t\t * @param {number} deltaDay - how many days to add (can be negative)\n\t\t * @param {boolean} validateOnly - if the function should only validate if the change can be made\n\t\t * @returns {boolean|void} whether the change can be made, if `validateOnly` is `true`\n\t\t */\n\t\tchangeSemesterDate: function (startOrEnd, deltaDay, validateOnly) {\n\t\t\tconst deltaMs = deltaDay * this.$utils.MS_PER_DAY;\n\t\t\tif (startOrEnd === 'start') {\n\t\t\t\tif (this.semester.start + deltaMs < this.semester.end) {\n\t\t\t\t\tif (validateOnly) return true;\n\t\t\t\t\tthis.manualDates.start += deltaMs;\n\t\t\t\t}\n\t\t\t} else if (startOrEnd === 'end') {\n\t\t\t\tif (this.semester.end + deltaMs > this.semester.start) {\n\t\t\t\t\tif (validateOnly) return true;\n\t\t\t\t\tthis.manualDates.end += deltaMs;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (validateOnly) return false;\n\t\t\tthis.makeChart();\n\t\t},\n\n\t\t/**\n\t\t * @returns {string} A representation of the command or control key,\n\t\t * depending on whether the macOS tab is selected or not\n\t\t */\n\t\tctrlOrCmd: function () {\n\t\t\treturn (this.tabOption === 'macos') ? '\\u2318 Cmd' : 'Ctrl';\n\t\t},\n\n\t\t/**\n\t\t * Finds the last semester whose end date is before `date`\n\t\t * @param {number} date - the current date, in milliseconds since the epoch\n\t\t * @returns {object} the semester of `date`\n\t\t */\n\t\tfindSemester: function (date) {\n\t\t\treturn this.semesters.reduce(function(prevSemester, curSemester) {\n\t\t\t\t// Find the last semester where we haven't reached the end\n\t\t\t\treturn (date < curSemester.end + utils.softSemesterLimit) ? curSemester : prevSemester;\n\t\t\t});\n\t\t},\n\n\t\tgetIdealBalanceAtDate: function (date, semester = this.semester) {\n\t\t\tdate = Math.max(semester.start, Math.min(date, semester.end));\n\t\t\tconst msOverall = semester.end - semester.start;\n\t\t\tconst msFuture = semester.end - date;\n\n\t\t\treturn (msFuture / msOverall) * this.startBalance;\n\t\t},\n\n\t\tgetIdealBalanceData: function () {\n\t\t\tconst idealBalanceData = [];\n\n\t\t\tthis.currentIdealBalanceIndex = null;\n\n\t\t\tfor (let date = this.semester.start; date < this.semester.end; date += this.$utils.MS_PER_DAY) {\n\t\t\t\tidealBalanceData.push([date, this.getIdealBalanceAtDate(date)]);\n\n\t\t\t\tif (this.now >= date && this.now < date + this.$utils.MS_PER_DAY) {\n\t\t\t\t\tconst MS_PER_MINUTE = 1000 * 60;\n\t\t\t\t\tconst nowNearestMinute = Math.floor(this.now / MS_PER_MINUTE) * MS_PER_MINUTE;\n\t\t\t\t\tidealBalanceData.push({\n\t\t\t\t\t\tx: nowNearestMinute,\n\t\t\t\t\t\ty: this.remainingBalanceIdeal,\n\t\t\t\t\t\tmarker: {\n\t\t\t\t\t\t\tenabled: true\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tthis.currentIdealBalanceIndex = idealBalanceData.length - 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// always include the last data point ($0)\n\t\t\tidealBalanceData.push({\n\t\t\t\tx: this.semester.end,\n\t\t\t\ty: 0,\n\t\t\t\tmarker: {\n\t\t\t\t\tenabled: (this.currentIdealBalanceIndex === null)\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (this.currentIdealBalanceIndex === null) {\n\t\t\t\tthis.currentIdealBalanceIndex = idealBalanceData.length - 1;\n\t\t\t}\n\n\t\t\treturn idealBalanceData;\n\t\t},\n\n\t\tgetNow: function () {\n\t\t\treturn this.debugNow || Date.now();\n\t\t},\n\n\t\t/**\n\t\t * @param {[number, number][]} [data] - array of points of the format [timestamp, amount]\n\t\t * @returns {Highcharts.ChartObject}\n\t\t */\n\t\tmakeChart: function (data) {\n\t\t\tconst idealBalanceData = [\n\t\t\t\t[this.semester.start, this.startBalance],\n\t\t\t\t[this.semester.end, 0],\n\t\t\t];\n\t\t\tif (this.inSemester) {\n\t\t\t\tidealBalanceData.splice(1, 0, [this.now, this.remainingBalanceIdeal]);\n\t\t\t}\n\n\t\t\tconst series = [\n\t\t\t\t{\n\t\t\t\t\tname: 'Ideal balance',\n\t\t\t\t\tcolor: 'red',\n\t\t\t\t\tlineWidth: 1,\n\t\t\t\t\tenableMouseTracking: !data,\n\t\t\t\t\tdata: this.getIdealBalanceData()\n\t\t\t\t},\n\t\t\t];\n\n\t\t\tif (data) {\n\t\t\t\tseries.push({\n\t\t\t\t\tname: 'Actual balance',\n\t\t\t\t\tcolor: 'steelblue',\n\t\t\t\t\tstep: (this.quickBalance === null) ? 'left' : null,\n\t\t\t\t\tdata: data,\n\t\t\t\t\ttooltip: {\n\t\t\t\t\t\tpointFormatter: function () {\n\t\t\t\t\t\t\treturn `<span style=\"color:${ this.color }\">\\u25CF</span> ${ this.series.name }: <b>$${ this.y.toFixed(2) }</b><br/>` +\n\t\t\t\t\t\t\t\t`<span style=\"color:red\">\\u25CF</span> Ideal balance: <b>$${ vm.getIdealBalanceAtDate(this.x).toFixed(2) }</b><br/>`;\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t});\n\n\t\t\t\t// If we're in the middle of the semester, add a dashed line with projected usage\n\t\t\t\tif (this.inSemester && this.remainingBalance !== 0) {\n\t\t\t\t\tseries.push({\n\t\t\t\t\t\tname: 'Projected balance',\n\t\t\t\t\t\tcolor: 'steelblue',\n\t\t\t\t\t\tdashStyle: 'shortdash',\n\t\t\t\t\t\tenableMouseTracking: false,\n\t\t\t\t\t\tdata: [\n\t\t\t\t\t\t\t[this.now, this.remainingBalance],\n\t\t\t\t\t\t\t[this.semester.end, 0],\n\t\t\t\t\t\t]\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst _this = this;\n\n\t\t\treturn Highcharts.chart('chart', {\n\t\t\t\tchart: {\n\t\t\t\t\ttype: 'line',\n\t\t\t\t\tevents: {\n\t\t\t\t\t\tload: function () {\n\t\t\t\t\t\t\tconst point = this.series[0].data[_this.currentIdealBalanceIndex];\n\t\t\t\t\t\t\tthis.tooltip.refresh(point);\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\ttitle: {\n\t\t\t\t\ttext: undefined,\n\t\t\t\t},\n\t\t\t\txAxis: {\n\t\t\t\t\tcrosshair: {\n\t\t\t\t\t\tsnap: false,\n\t\t\t\t\t},\n\t\t\t\t\tlabels: {\n\t\t\t\t\t\tformat: '{value:%b %e}',\n\t\t\t\t\t},\n\t\t\t\t\ttype: 'datetime',\n\t\t\t\t},\n\t\t\t\tyAxis: {\n\t\t\t\t\tcrosshair: {\n\t\t\t\t\t\tsnap: false,\n\t\t\t\t\t},\n\t\t\t\t\tmax: this.startBalance,\n\t\t\t\t\ttitle: {\n\t\t\t\t\t\ttext: 'Flex Points',\n\t\t\t\t\t},\n\t\t\t\t\tlabels: {\n\t\t\t\t\t\tformat: '${value}',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tplotOptions: {\n\t\t\t\t\tline: {\n\t\t\t\t\t\tmarker: {\n\t\t\t\t\t\t\tenabled: false,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tseries: series,\n\t\t\t\ttooltip: {\n\t\t\t\t\t// split: true,\n\t\t\t\t\tdateTimeLabelFormats: {\n\t\t\t\t\t\tday: '%a, %B %e',\n\t\t\t\t\t\tminute: '%a, %B %e, %l:%M %p',\n\t\t\t\t\t},\n\t\t\t\t\tvalueDecimals: 2,\n\t\t\t\t\tvaluePrefix: '$',\n\t\t\t\t},\n\t\t\t\ttime: {\n\t\t\t\t\tuseUTC: false,\n\t\t\t\t},\n\t\t\t});\n\t\t},\n\n\t\tuseDemo: function () {\n\t\t\t// DEBUG\n\t\t\t// const now = Date.parse('2018-04-01');\n\t\t\t// Flex.demoText = Flex.demoText.filter(function (entry) {\n\t\t\t// \treturn entry[0] < now;\n\t\t\t// }, this);\n\n\t\t\tthis.rawDataComplete = true;\n\t\t\tthis.startBalance = Flex.demoText[0][1];\n\t\t\tthis.remainingBalance = Flex.demoText[Flex.demoText.length - 1][1];\n\t\t\tthis.now = Flex.demoText[Flex.demoText.length - 1][0];\n\n\t\t\tthis.processedView = true;\n\t\t\tthis.makeChart(Flex.demoText);\n\t\t},\n\t},\n});\n\n\n// How we parse:\n// Iterate through the table data (which is in reverse chronological order)\n// Prepend each flex point change to the beginning of the data list, assuming for now that it ends at zero.\n// Stop iterating when we reach a row that is the addition of the full balance (i.e., the semester start).\n// If this is never reached (i.e., some data is missing), ask them for their current balance and attempt to\n// display the data that way.\nFlex.parseRawData = function (rawData) {\n\tvm.now = vm.getNow(); // in case the page has been loaded for a long time\n\n\tconst data = rawData.split('\\n');\n\n\tvm.parsedRawData = [];\n\tlet previousChange = 0;\n\tvm.rawDataComplete = false;\n\n\tfor(let i = 0; i < data.length && !vm.rawDataComplete; i++) {\n\t\tconst parseResult = utils.parseDataRow(data[i]);\n\n\t\tif (parseResult !== null) {\n\t\t\tconst { date, amountChange } = parseResult;\n\n\t\t\tconst firstAmount = vm.parsedRawData[0] ? utils.addCurrency(vm.parsedRawData[0][1], -previousChange) : 0;\n\t\t\tpreviousChange = amountChange;\n\n\t\t\tvm.parsedRawData.unshift([date, firstAmount]);\n\n\t\t\tif (amountChange === vm.startBalance) {\n\t\t\t\tvm.rawDataComplete = true;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Check for invalid data supplied\n\tif (vm.parsedRawData.length === 0) {\n\t\tvm.rawDataError = true;\n\t\treturn;\n\t}\n\n\tvm.rawDataError = false;\n\n\t// If the data goes all the way back to the beginning, we know the current\n\t// balance, so we adjust the remaining balance from 0\n\tif (vm.rawDataComplete) {\n\t\tvm.adjustParsedRawData(vm.startBalance - vm.parsedRawData[0][1]);\n\t} else {\n\t\tvm.showMessages.rawDataComplete = true;\n\t}\n\n\tvm.remainingBalance = vm.parsedRawData[vm.parsedRawData.length - 1][1];\n\tvm.now = vm.parsedRawData[vm.parsedRawData.length - 1][0];\n\n\tif (vm.remainingBalance !== 0) {\n\t\tvm.parsedRawData.push([vm.now, vm.remainingBalance]);\n\t}\n\n\tvm.processedView = true;\n\tvm.makeChart(vm.parsedRawData);\n};\n"],"sourceRoot":""}